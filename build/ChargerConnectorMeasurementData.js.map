{
  "version": 3,
  "sources": ["../src/ChargerConnectorMeasurementData.ts"],
  "sourcesContent": ["class ChargerConnectorMeasurementData {\r\n\r\n    private connectorStatus : number = -1;\r\n    private measuredVehicleNumberOfPhases : number = -1;\r\n    private evMaxPhaseCurrent : number = -1;\r\n    private targetCurrentFromPowerMgm : number = -1;\r\n    private frequency : number = -1;\r\n    private voltageL1 : number = -1;\r\n    private voltageL2 : number = -1;\r\n    private voltageL3 : number = -1;\r\n    private currentL1 : number = -1;\r\n    private currentL2 : number = -1;\r\n    private currentL3 : number = -1;\r\n    private activePowerL1 : number = -1;\r\n    private activePowerL2 : number = -1;\r\n    private activePowerL3 : number = -1;\r\n    private activePowerTotal : number = -1;\r\n    private powerFactor : number = -1;\r\n    private totalImportedActiveEnergyInRunningSession : number = -1;\r\n    private runningSessionDuration : number = -1;\r\n    private runningSessionDepartureTime : number = -1;\r\n    private runningSessionID : number = -1;\r\n    private evMaxPower : number = -1;\r\n    private evPlannedEnergy : number = -1;\r\n    \r\n    constructor() {\r\n\r\n    } \r\n\r\n    private decodeConnectorStatus(value : number): string  {\r\n        switch (value) {\r\n        case 0:\r\n            return \"Unknown\";\r\n        case 1:\r\n            return \"SocketAvailable\";\r\n        case 2:\r\n            return \"WaitingForVehicleToBeConnected\";\r\n        case 3:\r\n            return \"WaitingForVehicleToStart\";\r\n        case 4:\r\n            return \"Charging\";\r\n        case 5:\r\n            return \"ChargingPausedByEv\";\r\n        case 6:\r\n            return \"ChargingPausedByEvse\";\r\n        case 7:\r\n            return \"ChargingEnded\";\r\n        case 8:\r\n            return \"ChargingFault\";\r\n        case 9:\r\n            return \"UnpausingCharging\";\r\n        case 10:\r\n            return \"Unavailable\";\r\n    \r\n        }\r\n\r\n        return \"\";\r\n    }\r\n    \r\n    private decodeVehicleNumberOfPhases(value : number) : string  {\r\n        switch (value) {\r\n        case 0:\r\n            return \"Three phases\";\r\n        case 1:\r\n            return \"Single phase (L1)\";\r\n        case 2:\r\n            return \"Single phase (L2)\";\r\n        case 3:\r\n            return \"Single phase (L3)\";\r\n        case 4:\r\n            return \"Unknown\";\r\n        case 5:\r\n            return \"Two phases\";\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /* setter */\r\n\r\n    public setConnectorStatus(connectorStatus : number) { this.connectorStatus = connectorStatus; }\r\n    public setMeasuredVehicleNumberOfPhases(measuredVehicleNumberOfPhases : number) { this.measuredVehicleNumberOfPhases = measuredVehicleNumberOfPhases; }\r\n    public setEvMaxPhaseCurrent(evMaxPhaseCurrent : number) { this.evMaxPhaseCurrent = evMaxPhaseCurrent; }\r\n    public setTargetCurrentFromPowerMgm(targetCurrentFromPowerMgm : number) { this.targetCurrentFromPowerMgm = targetCurrentFromPowerMgm; }\r\n    public setFrequency(frequency : number) { this.frequency = frequency; }\r\n    public setVoltageL1(voltageL1 : number) { this.voltageL1 = voltageL1; }\r\n    public setVoltageL2(voltageL2 : number) { this.voltageL2 = voltageL2; }\r\n    public setVoltageL3(voltageL3 : number) { this.voltageL3 = voltageL3; }\r\n    public setCurrentL1(currentL1 : number) { this.currentL1 = currentL1; }\r\n    public setCurrentL2(currentL2 : number) { this.currentL2 = currentL2; }\r\n    public setCurrentL3(currentL3 : number) { this.currentL3 = currentL3; }\r\n    public setActivePowerL1(activePowerL1 : number) { this.activePowerL1 = activePowerL1; }\r\n    public setActivePowerL2(activePowerL2 : number) { this.activePowerL2 = activePowerL2; }\r\n    public setActivePowerL3(activePowerL3 : number) { this.activePowerL3 = activePowerL3; }\r\n    public setActivePowerTotal(activePowerTotal : number) { this.activePowerTotal = activePowerTotal; }\r\n    public setPowerFactor(powerFactor : number) { this.powerFactor = powerFactor; }\r\n    public setTotalImportedActiveEnergyInRunningSession(totalImportedActiveEnergyInRunningSession : number) { this.totalImportedActiveEnergyInRunningSession = totalImportedActiveEnergyInRunningSession; }\r\n    public setRunningSessionDuration(runningSessionDuration : number) { this.runningSessionDuration = runningSessionDuration; }\r\n    public setRunningSessionDepartureTime(runningSessionDepartureTime : number) { this.runningSessionDepartureTime = runningSessionDepartureTime; }\r\n    public setRunningSessionID(runningSessionID : number) { this.runningSessionID = runningSessionID; }\r\n    public setEvMaxPower(evMaxPower : number) { this.evMaxPower = evMaxPower; }\r\n    public setEvPlannedEnergy(evPlannedEnergy : number) { this.evPlannedEnergy = evPlannedEnergy; }\r\n\r\n    \r\n    /* getter */\r\n\r\n    public getConnectorStatus() : number { return this.connectorStatus; }\r\n    public getMeasuredVehicleNumberOfPhases() : number { return this.measuredVehicleNumberOfPhases; }\r\n    public getEvMaxPhaseCurrent() : number { return this.evMaxPhaseCurrent; }\r\n    public getTargetCurrentFromPowerMgm() : number { return this.targetCurrentFromPowerMgm; }\r\n    public getFrequency() : number { return this.frequency; }\r\n    public getVoltageL1() : number { return this.voltageL1; }\r\n    public getVoltageL2() : number { return this.voltageL2; }\r\n    public getVoltageL3() : number { return this.voltageL3; }\r\n    public getCurrentL1() : number { return this.currentL1; }\r\n    public getCurrentL2() : number { return this.currentL2; }\r\n    public getCurrentL3() : number { return this.currentL3; }\r\n    public getActivePowerL1() : number { return this.activePowerL1; }\r\n    public getActivePowerL2() : number { return this.activePowerL2; }\r\n    public getActivePowerL3() : number { return this.activePowerL3; }\r\n    public getActivePowerTotal() : number { return this.activePowerTotal; }\r\n    public getPowerFactor() : number { return this.powerFactor; }\r\n    public getTotalImportedActiveEnergyInRunningSession() : number { return this.totalImportedActiveEnergyInRunningSession; }\r\n    public getRunningSessionDuration() : number { return this.runningSessionDuration; }\r\n    public getRunningSessionDepartureTime() : number { return this.runningSessionDepartureTime; }\r\n    public getRunningSessionID() : number { return this.runningSessionID; }\r\n    public getEvMaxPower() : number { return this.evMaxPower; }\r\n    public getEvPlannedEnergy() : number { return this.evPlannedEnergy; }\r\n\r\n    public getConnectorStatusAsString() : string { return this.decodeConnectorStatus(this.connectorStatus); }\r\n    public getMeasuredVehicleNumberOfPhasesAsString() : string { return this.decodeVehicleNumberOfPhases(this.measuredVehicleNumberOfPhases); }\r\n}\r\n\r\nexport {ChargerConnectorMeasurementData}"],
  "mappings": "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",
  "names": []
}
