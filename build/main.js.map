{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.3.0\n */\n\nimport * as utils from \"@iobroker/adapter-core\";\nimport { ChargerController } from \"./ChargerController\";\nimport { ChargerInfoData } from \"./ChargerInfoData\";\nimport { ChargerConnectorInfoData} from \"./ChargerConnectorInfoData\";\nimport { ChargerConnectorMeasurementData } from \"./ChargerConnectorMeasurementData\"\n\nclass SonnenCharger extends utils.Adapter {\n\n\tprivate chargerController : ChargerController;\n\tprivate updateInterval: ioBroker.Interval | undefined;\n\tprivate infoData : ChargerInfoData | undefined;\n\n\tpublic constructor(options: Partial<utils.AdapterOptions> = {}) {\n\t\tsuper({\n\t\t\t...options,\n\t\t\tname: \"sonnen-charger\",\n\t\t});\n\n\t\tthis.chargerController = new ChargerController();\n\n\t\tthis.on(\"ready\", this.onReady.bind(this));\n\t\tthis.on(\"stateChange\", this.onStateChange.bind(this));\n\t\tthis.on(\"unload\", this.onUnload.bind(this));\n\t}\n\n\t/**\n\t * Is called when databases are connected and adapter received configuration.\n\t */\n\tprivate async onReady(): Promise<void> {\n\n\t\t// Reset the connection indicator during startup\n\t\tthis.setState(\"info.connection\", true, true);\n\n\t\t// check configuration\n\t\tif (!this.config.serverIp) {\n\t\t\tthis.log.error(\"Server IP is empty - please check instance configuration\")\n\t\t\treturn;\n\t\t}\n\t\tif (!this.config.serverPort) {\n\t\t\tthis.log.error(\"Server port is empty - please check instance configuration\")\n\t\t\treturn;\n\t\t}\n\t\tif (!this.config.interval) {\n\t\t\tthis.log.error(\"interval is empty - please check instance configuration\")\n\t\t\treturn;\n\t\t}\n\n\t\tthis.log.info(\"config serverIp: \" + this.config.serverIp);\n\t\tthis.log.info(\"config serverPort: \" + this.config.serverPort);\n\t\tthis.log.info(\"config interval: \" + this.config.interval);\n\t\tthis.log.info(\"config allowWriteAccess: \" + this.config.allowWriteAccess);\n\n\t\tthis.chargerController.connect( this.config.serverIp, this.config.serverPort, this.actionsAfterConnect.bind(this));\n\t}\n\n\tprivate onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n\t\tif (!id || !state || state.ack) {\n\t\t\treturn;\n\t\t} // Ignore acknowledged state changes\n\n\t\tif (state.val != null && state.val != false) {\n\n\t\t\tconst myRegexp = new RegExp(\"sonnen-charger\\\\.(\\\\d)\\\\.commands(\\\\.connectors\\\\.(\\\\d))?\\\\.(.*)\");\n\t\t\tconst match = myRegexp.exec(id);\n\n\t\t\tif (match != null) {\n\t\t\t\tconst command = match[4];\n\t\t\t\tconst connectorNum : number = parseInt(match[3]);\n\n\t\t\t\tif (!connectorNum) {\n\t\t\t\t\t// Charger command\n\t\t\t\t\tthis.log.info(\"Received command: <\"+ command + \"> with value <\"+state.val+\">\");\n\n\t\t\t\t\tswitch (command) {\n\t\t\t\t\t\tcase \"restart\": {\n\t\t\t\t\t\t\tthis.log.debug(\"restart\");\n\t\t\t\t\t\t\tthis.chargerController.commandRestart();\n\t\t\t\t\t\t\tthis.setState(id,false,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"setTime\": {\n\t\t\t\t\t\t\tthis.log.debug(\"setTime\");\n\t\t\t\t\t\t\tif (typeof state.val === \"number\") {\n\t\t\t\t\t\t\t\tthis.chargerController.commandSetTime(state.val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState(id,null,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tthis.log.error(\"Command <\"+command+\"> not supported\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Connector command\n\t\t\t\t\tthis.log.info(\"Received command: <\"+ command + \"> for connector <\" +connectorNum + \"> with value <\"+state.val+\">\");\n\n\t\t\t\t\tswitch (command) {\n\t\t\t\t\t\tcase \"stopCharging\": {\n\t\t\t\t\t\t\tthis.log.debug(\"stopCharging\");\n\t\t\t\t\t\t\tthis.chargerController.commandStopCharging(connectorNum);\n\t\t\t\t\t\t\tthis.setState(id,false,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"pauseCharging\": {\n\t\t\t\t\t\t\tthis.log.debug(\"pauseCharging\");\n\t\t\t\t\t\t\tthis.chargerController.commandPauseCharging(connectorNum);\n\t\t\t\t\t\t\tthis.setState(id,false,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"setDepartureTime\": {\n\t\t\t\t\t\t\tthis.log.debug(\"setDepartureTime\");\n\t\t\t\t\t\t\tif (typeof state.val === \"number\") {\n\t\t\t\t\t\t\t\tthis.chargerController.commandSetDepartureTime(connectorNum, state.val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState(id,null,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"setCurrentSetpoint\": {\n\t\t\t\t\t\t\tthis.log.debug(\"setCurrentSetpoint\");\n\t\t\t\t\t\t\tif (typeof state.val === \"number\") {\n\t\t\t\t\t\t\t\tthis.chargerController.commandSetCurrentSetpoint(connectorNum, state.val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"cancelCurrentSetpoint\": {\n\t\t\t\t\t\t\tthis.log.debug(\"cancelCurrentSetpoint\");\n\t\t\t\t\t\t\tthis.chargerController.commandCancelCurrentSetpoint(connectorNum);\n\t\t\t\t\t\t\tthis.setState(id,false,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"setPowerSetpoint\": {\n\t\t\t\t\t\t\tthis.log.debug(\"setPowerSetpoint\");\n\t\t\t\t\t\t\tif (typeof state.val === \"number\") {\n\t\t\t\t\t\t\t\tthis.chargerController.commandSetPowerSetpoint(connectorNum, state.val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState(id,null,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"cancelPowerSetpoint\": {\n\t\t\t\t\t\t\tthis.log.debug(\"cancelPowerSetpoint\");\n\t\t\t\t\t\t\tthis.chargerController.commandCancelPowerSetpoint(connectorNum);\n\t\t\t\t\t\t\tthis.setState(id,false,true);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tthis.log.error(\"Command <\"+command+\"> not supported\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsetTimeout(async () => {\n\t\t\t\t\t\tthis.log.debug(\"updateChargerConnectorInfoData for connector \"+connectorNum);\n\t\t\t\t\t\tthis.chargerController.fetchConnectorMeasurementData(connectorNum, this.updateChargerConnectorMeasurementObjects.bind(this));\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Is called when adapter shuts down - callback has to be called under any circumstances!\n\t */\n\tprivate onUnload(callback: () => void): void {\n\t\ttry {\n\t\t\t// Reset the connection indicator during shutdown\n\t\t\tthis.setState(\"info.connection\", false, true);\n\n\t\t\tif (this.updateInterval){\n\t\t\t\tthis.clearInterval(this.updateInterval);\n\t\t\t}\n\n\t\t\tcallback();\n\t\t} catch (e) {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\n\tprivate actionsAfterConnect() : void {\n\n\t\tthis.chargerController.fetchChargerInfoData(this.initChargerInfoData.bind(this));\n\t}\n\n\tprivate async initChargerInfoData(infoData : ChargerInfoData): Promise<void> {\n\n\t\tthis.infoData = infoData;\n\n\t\tfor(let i = 1; i <= this.infoData.getNumberOfConnectors(); i++) {\n\t\t\tthis.createChargerConnectorInfoObjects(i);\n\t\t\tthis.createChargerConnectorMeasurementObjects(i);\n\t\t}\n\n\t\tif (this.config.allowWriteAccess) {\n\n\t\t\tthis.createChargerCommandObjects();\n\n\t\t\tfor(let i = 1; i <= this.infoData.getNumberOfConnectors(); i++) {\n\t\t\t\tthis.createChargerConnectorCommandObjects(i);\n\t\t\t}\n\t\t\tthis.subscribeStates(\"commands.*\");\n\t\t} else {\n\t\t\tthis.deleteChannelAsync(\"commands\");\n\t\t}\n\n\t\tthis.setState(\"chargerSettings.serialNumber\", infoData.getSerialNumber(), true);\n\t\tthis.setState(\"chargerSettings.model\", infoData.getModel(), true);\n\t\tthis.setState(\"chargerSettings.hwVersion\", infoData.getHardwareVersion(), true);\n\t\tthis.setState(\"chargerSettings.swVersion\", infoData.getSoftwareVersion(), true);\n\t\tthis.setState(\"chargerSettings.numberOfConnectors\", infoData.getNumberOfConnectors(), true);\n\n\t\tfor(let i = 1; i <= this.infoData.getNumberOfConnectors(); i++) {\n\t\t\tthis.chargerController.fetchConnectorInfoData(i, this.updateChargerConnectorInfoData.bind(this));\n\t\t\tthis.chargerController.fetchConnectorMeasurementData(i, this.updateChargerConnectorMeasurementObjects.bind(this));\n\t\t}\n\n\t\tthis.updateInterval = this.setInterval(async () => {\n\t\t\tthis.updateChargerData();\n\t\t}, this.config.interval * 1000);\n\t}\n\n\tprivate async updateChargerData(): Promise<void> {\n\t\tif (this.infoData != undefined ) {\n\t\t\tfor(let i = 1; i <= this.infoData.getNumberOfConnectors(); i++) {\n\t\t\t\tthis.chargerController.fetchConnectorInfoData(i, this.updateChargerConnectorInfoData.bind(this));\n\t\t\t\tthis.chargerController.fetchConnectorMeasurementData(i, this.updateChargerConnectorMeasurementObjects.bind(this));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async createChargerConnectorInfoObjects(num : number): Promise<void> {\n\n\t\tthis.log.debug(\"createChargerConnectorInfoObjects for connector \"+num);\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: {\n\t\t\t\tname: \"connector \" + num\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num+\".connectorType\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Connector type\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num+\".numberOfPhases\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Number phases\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num+\".l1ConnectedToPhase\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"L1 connected to phase\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num+\".l2ConnectedToPhase\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"L2 connected to phase\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num+\".l3ConnectedToPhase\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"L3 connected to phase\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"chargerSettings.connectors.\"+num+\".customMaxCurrent\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Custom max current\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.current\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\t}\n\n\tprivate async updateChargerConnectorInfoData(num : number, data : ChargerConnectorInfoData): Promise<void> {\n\n\t\tthis.log.debug(\"updateChargerConnectorInfoData for connector \"+num);\n\n\t\tthis.setState(\"chargerSettings.connectors.\"+num+\".connectorType\", data.getConnectorTypeAsString(), true);\n\t\tthis.setState(\"chargerSettings.connectors.\"+num+\".numberOfPhases\", data.getNumberOfPhases(), true);\n\t\tthis.setState(\"chargerSettings.connectors.\"+num+\".l1ConnectedToPhase\", data.getL1ConnectedToPhase(), true);\n\t\tthis.setState(\"chargerSettings.connectors.\"+num+\".l2ConnectedToPhase\", data.getL2ConnectedToPhase(), true);\n\t\tthis.setState(\"chargerSettings.connectors.\"+num+\".l3ConnectedToPhase\", data.getL3ConnectedToPhase(), true);\n\t\tthis.setState(\"chargerSettings.connectors.\"+num+\".customMaxCurrent\", data.getCustomMaxCurrent(), true);\n\t}\n\n\tprivate async createChargerConnectorMeasurementObjects(num : number): Promise<void> {\n\n\t\tthis.log.debug(\"createChargerConnectorMeasurementObjects for connector \"+num);\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: {\n\t\t\t\tname: \"connector \"+ num\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".connectorStatus\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Connnector status id\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".connectorStatusLabel\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Connnector status\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".measuredVehicleNumberOfPhases\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Measured vehicle number of phases id\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".measuredVehicleNumberOfPhasesLabel\",{\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Measured vehicle number of phases label\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".evMaxPhaseCurrent\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"EV max phase current\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.current\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".targetCurrentFromPowerMgm\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Target current from power mgm or modbus\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.current\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".frequency\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Frequency\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"Hz\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".voltageL1\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"L-N voltage (L1)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.voltage\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"V\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".voltageL2\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"L-N voltage (L2)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.voltage\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"V\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".voltageL3\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"L-N voltage (L3)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.voltage\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"V\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".currentL1\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Curent (L1)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.current\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".currentL2\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Curent (L2)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.current\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".currentL3\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Curent (L3)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.current\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".activePowerL1\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Active power (L1)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.power\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kW\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".activePowerL2\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Active power (L2)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.power\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kW\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".activePowerL3\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Active power (L3)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.power\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kW\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".activePowerTotal\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Active power (total)\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.power\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kW\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".powerFactor\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Power factor\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".totalImportedActiveEnergyInRunningSession\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Total imported active energy in running session\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.power.consumption\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kWh\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".runningSessionDuration\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Running session duration\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value.interval\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"s\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".runningSessionDepartureTime\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Running session departure time\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"s\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".runningSessionDepartureTimeISO\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Running session departure time in ISO UTC format\",\n\t\t\t\ttype: \"string\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".runningSessionID\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Running session ID\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".evMaxPower\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"EV max power\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kW\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"measurements.\"+num+\".evPlannedEnergy\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"EV planned energy\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: true,\n\t\t\t\twrite: false,\n\t\t\t\tunit: \"kWh\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t}\n\n\tprivate async updateChargerConnectorMeasurementObjects(num : number, data : ChargerConnectorMeasurementData): Promise<void> {\n\n\t\tthis.log.debug(\"updateChargerConnectorMeasurementObjects for connector \"+num);\n\n\t\tthis.setState(\"measurements.\"+num+\".connectorStatus\", data.getConnectorStatus(), true);\n\t\tthis.setState(\"measurements.\"+num+\".connectorStatusLabel\", data.getConnectorStatusAsString(), true);\n\t\tthis.setState(\"measurements.\"+num+\".measuredVehicleNumberOfPhases\", data.getMeasuredVehicleNumberOfPhases(), true);\n\t\tthis.setState(\"measurements.\"+num+\".measuredVehicleNumberOfPhasesLabel\", data.getMeasuredVehicleNumberOfPhasesAsString(), true);\n\t\tthis.setState(\"measurements.\"+num+\".evMaxPhaseCurrent\", data.getEvMaxPhaseCurrent(), true);\n\t\tthis.setState(\"measurements.\"+num+\".targetCurrentFromPowerMgm\", data.getTargetCurrentFromPowerMgm(), true);\n\t\tthis.setState(\"measurements.\"+num+\".frequency\", data.getFrequency(), true);\n\t\tthis.setState(\"measurements.\"+num+\".voltageL1\", data.getVoltageL1(), true);\n\t\tthis.setState(\"measurements.\"+num+\".voltageL2\", data.getVoltageL2(), true);\n\t\tthis.setState(\"measurements.\"+num+\".voltageL3\", data.getVoltageL3(), true);\n\t\tthis.setState(\"measurements.\"+num+\".currentL1\", data.getCurrentL1(), true);\n\t\tthis.setState(\"measurements.\"+num+\".currentL2\", data.getCurrentL2(), true);\n\t\tthis.setState(\"measurements.\"+num+\".currentL3\", data.getCurrentL3(), true);\n\t\tthis.setState(\"measurements.\"+num+\".activePowerL1\", data.getActivePowerL1(), true);\n\t\tthis.setState(\"measurements.\"+num+\".activePowerL2\", data.getActivePowerL2(), true);\n\t\tthis.setState(\"measurements.\"+num+\".activePowerL3\", data.getActivePowerL3(), true);\n\t\tthis.setState(\"measurements.\"+num+\".activePowerTotal\", data.getActivePowerTotal(), true);\n\t\tthis.setState(\"measurements.\"+num+\".powerFactor\", data.getPowerFactor(), true);\n\t\tthis.setState(\"measurements.\"+num+\".totalImportedActiveEnergyInRunningSession\", data.getTotalImportedActiveEnergyInRunningSession(), true);\n\t\tthis.setState(\"measurements.\"+num+\".runningSessionDuration\", data.getRunningSessionDuration(), true);\n\t\tthis.setState(\"measurements.\"+num+\".runningSessionDepartureTime\", data.getRunningSessionDepartureTime(), true);\n\t\tthis.setState(\"measurements.\"+num+\".runningSessionDepartureTimeISO\",new Date(data.getRunningSessionDepartureTime()*1000).toISOString(),true);\n\t\tthis.setState(\"measurements.\"+num+\".runningSessionID\", data.getRunningSessionID(), true);\n\t\tthis.setState(\"measurements.\"+num+\".evMaxPower\", data.getEvMaxPower(), true);\n\t\tthis.setState(\"measurements.\"+num+\".evPlannedEnergy\", data.getEvPlannedEnergy(), true);\n\n\t\t// Update command values\n\t\tthis.getState(\"commands.connectors.\"+num+\".setCurrentSetpoint\", (err, state) => {\n\t\t\tif (state != null && state.val == data.getTargetCurrentFromPowerMgm()) {\n\t\t\t\tthis.setState(\"commands.connectors.\"+num+\".setCurrentSetpoint\", data.getTargetCurrentFromPowerMgm(), true);\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tprivate async createChargerCommandObjects() : Promise<void> {\n\n\t\tthis.log.debug(\"createChargerCommandObjects\");\n\n\t\tthis.setObjectNotExists(\"commands\", {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Commands\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.restart\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Restart sonnen-charger\",\n\t\t\t\trole: \"button\",\n\t\t\t\tdef: false,\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.setTime\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Set time UTC\",\n\t\t\t\trole: \"value\",\n\t\t\t\tdef: false,\n\t\t\t\ttype: \"number\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true,\n\t\t\t\tunit: \" s\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors\", {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Connector Commands\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\t}\n\n\tprivate async createChargerConnectorCommandObjects(num : number): Promise<void> {\n\n\t\tthis.log.debug(\"createChargerConnectorCommandObjects for connector \"+num);\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num, {\n\t\t\ttype: \"channel\",\n\t\t\tcommon: {\n\t\t\t\tname: \"connector \" + num\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".stopCharging\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Stop charging\",\n\t\t\t\trole: \"button.stop\",\n\t\t\t\tdef: false,\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".pauseCharging\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Pause charging\",\n\t\t\t\trole: \"button.pause\",\n\t\t\t\tdef: false,\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".setDepartureTime\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Set departure time\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true,\n\t\t\t\tunit: \" s\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".setCurrentSetpoint\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Set current setpoint\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true,\n\t\t\t\tunit: \"A\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".cancelCurrentSetpoint\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Cancel current setpoint\",\n\t\t\t\trole: \"button\",\n\t\t\t\tdef: false,\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".setPowerSetpoint\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Set power setpoint\",\n\t\t\t\ttype: \"number\",\n\t\t\t\trole: \"value\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true,\n\t\t\t\tunit: \"kW\"\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\n\t\tthis.setObjectNotExists(\"commands.connectors.\"+num+\".cancelPowerSetpoint\", {\n\t\t\ttype: \"state\",\n\t\t\tcommon: {\n\t\t\t\tname: \"Cancel power setpoint\",\n\t\t\t\trole: \"button\",\n\t\t\t\tdef: false,\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tread: false,\n\t\t\t\twrite: true\n\t\t\t},\n\t\t\tnative: {}\n\t\t});\n\t}\n\n}\n\nif (require.main !== module) {\n\t// Export the constructor in compact mode\n\tmodule.exports = (options: Partial<utils.AdapterOptions> | undefined) => new SonnenCharger(options);\n} else {\n\t// otherwise start the instance directly\n\t(() => new SonnenCharger())();\n}\n"],
  "mappings": "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",
  "names": []
}
