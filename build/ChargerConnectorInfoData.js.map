{
  "version": 3,
  "sources": ["../src/ChargerConnectorInfoData.ts"],
  "sourcesContent": ["class ChargerConnectorInfoData {\r\n\r\n    private connectorType : number = -1;\r\n    private numberOfPhases : number = -1;\r\n    private l1ConnectedToPhase : number = -1;\r\n    private l2ConnectedToPhase : number = -1;\r\n    private l3ConnectedToPhase : number = -1;\r\n    private customMaxCurrent : number = -1;\r\n    \r\n\r\n    private decodeConnectorType(value : number) : string {\r\n        switch (value) {\r\n        case 1:\r\n            return \"SocketType2\";\r\n        case 2:\r\n            return \"PlugType2\";\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /* setter */\r\n\r\n    public setConnectorType(connectorType : number) { this.connectorType = connectorType; }\r\n    public setNumberOfPhases(numberOfPhases : number) { this.numberOfPhases = numberOfPhases; }\r\n    public setL1ConnectedToPhase(l1ConnectedToPhase : number) { this.l1ConnectedToPhase = l1ConnectedToPhase; }\r\n    public setL2ConnectedToPhase(l2ConnectedToPhase : number) { this.l2ConnectedToPhase = l2ConnectedToPhase; }\r\n    public setL3ConnectedToPhase(l3ConnectedToPhase : number) { this.l3ConnectedToPhase = l3ConnectedToPhase; }\r\n    public setCustomMaxCurrent(customMaxCurrent : number) { this.customMaxCurrent = customMaxCurrent; }\r\n\r\n    /* getter */\r\n\r\n    public getConnectorType() : number { return this.connectorType; }\r\n    public getNumberOfPhases() : number { return this.numberOfPhases; }\r\n    public getL1ConnectedToPhase() : number { return this.l1ConnectedToPhase; }\r\n    public getL2ConnectedToPhase() : number { return this.l2ConnectedToPhase; }\r\n    public getL3ConnectedToPhase() : number { return this.l3ConnectedToPhase; }\r\n    public getCustomMaxCurrent() : number { return this.customMaxCurrent; }\r\n\r\n    public getConnectorTypeAsString() : string { return this.decodeConnectorType(this.connectorType); }\r\n}\r\n\r\nexport {ChargerConnectorInfoData}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAM,yBAAyB;AAAA,EAA/B;AAEI,SAAQ,gBAAyB;AACjC,SAAQ,iBAA0B;AAClC,SAAQ,qBAA8B;AACtC,SAAQ,qBAA8B;AACtC,SAAQ,qBAA8B;AACtC,SAAQ,mBAA4B;AAAA;AAAA,EAG5B,oBAAoB,OAAyB;AACjD,YAAQ,OAAO;AAAA,MACf,KAAK;AACD,eAAO;AAAA,MACX,KAAK;AACD,eAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EAIO,iBAAiB,eAAwB;AAAE,SAAK,gBAAgB;AAAA,EAAe;AAAA,EAC/E,kBAAkB,gBAAyB;AAAE,SAAK,iBAAiB;AAAA,EAAgB;AAAA,EACnF,sBAAsB,oBAA6B;AAAE,SAAK,qBAAqB;AAAA,EAAoB;AAAA,EACnG,sBAAsB,oBAA6B;AAAE,SAAK,qBAAqB;AAAA,EAAoB;AAAA,EACnG,sBAAsB,oBAA6B;AAAE,SAAK,qBAAqB;AAAA,EAAoB;AAAA,EACnG,oBAAoB,kBAA2B;AAAE,SAAK,mBAAmB;AAAA,EAAkB;AAAA,EAI3F,mBAA4B;AAAE,WAAO,KAAK;AAAA,EAAe;AAAA,EACzD,oBAA6B;AAAE,WAAO,KAAK;AAAA,EAAgB;AAAA,EAC3D,wBAAiC;AAAE,WAAO,KAAK;AAAA,EAAoB;AAAA,EACnE,wBAAiC;AAAE,WAAO,KAAK;AAAA,EAAoB;AAAA,EACnE,wBAAiC;AAAE,WAAO,KAAK;AAAA,EAAoB;AAAA,EACnE,sBAA+B;AAAE,WAAO,KAAK;AAAA,EAAkB;AAAA,EAE/D,2BAAoC;AAAE,WAAO,KAAK,oBAAoB,KAAK,aAAa;AAAA,EAAG;AACtG;",
  "names": []
}
